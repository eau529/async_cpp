name: CMake

on:
  push:
    branches: [ main, citest-* ]
  pull_request:
    branches: [ main, citest-* ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/checkout@v3
      with:
        repository: fuxi-asyncflow/LuaJIT
        path: thirdparty/LuaJIT
        token: ${{ secrets.GH_PAT }}

    - name: compile-luajit
      run: make -C thirdparty/LuaJIT


      #    - name: prepare-luajit
      #run: |
      #  wget -O ${{github.workspace}}/thirdparty/LuaJIT-2.1.0-beta3.tar.gz https://luajit.org/download/LuaJIT-2.1.0-beta3.tar.gz
      #  tar xvf ${{github.workspace}}/thirdparty/LuaJIT-2.1.0-beta3.tar.gz -C ${{github.workspace}}/thirdparty
      #  make -C ${{github.workspace}}/thirdparty/LuaJIT-2.1.0-beta3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_LUAJIT=ON 
        -DLUAJIT_INCLUDE_PATH=thirdparty/LuaJIT/src -DLUAJIT_LIB=thirdparty/LuaJIT/src/libluajit.so
        -DBUILD_TEST=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        cp ../thirdparty/LuaJIT/src/libluajit.so ./libluajit-5.1.so.2
        export LD_LIBRARY_PATH=${{github.workspace}}/build/
        ${{github.workspace}}/build/lua_test
      
